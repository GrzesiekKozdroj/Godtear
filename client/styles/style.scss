@import url('https://fonts.googleapis.com/css?family=Cardo:500i,500,700&display=swap');
*{
    margin:0;
    padding:0;
    box-sizing: border-box;
    font-family: 'Cardo', serif;
    //box-shadow: inset 0 0 3vh black;
    //border:.5px solid red;
}

@mixin instaFlex {
    display:flex;
    justify-content: center;
    align-items: center;
}

@mixin arrow($color,$direction,$size){
    @if $direction == top {
        width: 0; 
        height: 0; 
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;

    }@else if $direction == left {

        width: 0; 
        height: 0; 
        border-top: $size solid transparent;
        border-bottom: $size solid transparent; 
        border-right:$size solid $color;

    }@else if $direction == bottom {

        width: 0; 
        height: 0; 
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;

    } @else if $direction == right {

        width: 0; 
        height: 0; 
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
    }
}
//@import 'logInScreen';

$sA: 12;
$viewHeight: 100vh;
$one: (1 / $sA * $viewHeight);
$hexHeight:(.5774 / $sA * $viewHeight);
$half: (.5 / $sA * $viewHeight);
$hexMargin:(.1787 / $sA * $viewHeight);
$hexBackground: ( .993042 / $sA * $viewHeight);
$quarter: (.25 / $sA * $viewHeight);
$minusQuarter: (-.25 / $sA * $viewHeight);
$fifive: (.55 / $sA * $viewHeight);
$hexBorder: (.07 / $sA * $viewHeight);
$margin: .1vh;//(.1 / $sA * $viewHeight);
$marginLeft:(5vh);
$appWidth:79vw;
$appHeight:86vh;
$minusQuarterht: 99vh;
$shelfWidth:160vh;
$border: ($margin * 5);
$hexTriangleSize: (.7071 / $sA * $viewHeight);
$hexTriangleOffsetLeft: (.0764 / $sA * $viewHeight);
$hexAfterWidth: (.86 / $sA * $viewHeight);
$hexAfterHeight: ( .4965 / $sA * $viewHeight);
$hexBottom: (-.353553 / $sA * $viewHeight);
$hexBottomSize: (.098995 / $sA * $viewHeight);
$hexMinusQuarter: (-.248261 / $sA * 100vh);

@mixin hexagonomicron ($sA) {
    $viewHeight: 100vh;
    $one: (1 / $sA * $viewHeight);
    $hexHeight:(.5774 / $sA * $viewHeight);
    $half: (.5 / $sA * $viewHeight);
    $hexMargin:(.1787 / $sA * $viewHeight);
    $hexBackground: ( .993042 / $sA * $viewHeight);
    $quarter: (.25 / $sA * $viewHeight);
    $minusQuarter: (-.25 / $sA * $viewHeight);
    $fifive: (.55 / $sA * $viewHeight);
    $hexBorder: (.07 / $sA * $viewHeight);
    $margin: .1vh;//(.1 / $sA * $viewHeight);
    $marginLeft:(5vh);
    $appWidth:147vh;
    $appHeight:95vh;
    $minusQuarterht: 99vh;
    $shelfWidth:160vh;
    $border: ($margin * 5);
    $hexTriangleSize: (.7071 / $sA * $viewHeight);
    $hexTriangleOffsetLeft: (.0764 / $sA * $viewHeight);
    $hexAfterWidth: (.86 / $sA * $viewHeight);
    $hexAfterHeight: ( .4965 / $sA * $viewHeight);
    $hexBottom: (-.353553 / $sA * $viewHeight);
    $hexBottomSize: (.098995 / $sA * $viewHeight);
    $hexMinusQuarter: (-.248261 / $sA * 100vh);
            position: relative;
            width: $one; 
            height: $hexHeight;
            margin: $hexMargin 0;
            background-size: auto $hexBackground;
            background-position: center;
            border-left: solid $hexBorder #333333;
            border-right: solid $hexBorder #333333;
            &:after {
                content: "";
                position: absolute;
                top: (.040415 / $sA * $viewHeight);
                left: 0;
                width: $hexAfterWidth;
                height: $hexAfterHeight;
                z-index: 2;
                background: inherit;
            }
            img{
                height:($hexHeight + $hexTriangleSize / 1.2);
                width:$one * 1.05;
                position:relative;
                top:($hexMinusQuarter * 1.38);
                left:($hexMinusQuarter * .36);
                z-index: 2;
            }
            .top, .bottom{
                position: absolute;
                z-index: 1;
                width: $hexTriangleSize;
                height: $hexTriangleSize;
                overflow: hidden;
                -webkit-transform: scaleY(0.5774) rotate(-45deg);
                -ms-transform: scaleY(0.5774) rotate(-45deg);
                transform: scaleY(0.5774) rotate(-45deg);
                background: inherit;
                left: $hexTriangleOffsetLeft;
                &:before, &:after{
                    content: "";
                    position: absolute;
                    width: $hexAfterWidth;
                    height: $hexAfterHeight;
                    -webkit-transform:  rotate(45deg) scaleY(1.7321) translateY($hexMinusQuarter);
                    -ms-transform:      rotate(45deg) scaleY(1.7321) translateY($hexMinusQuarter);
                    transform:          rotate(45deg) scaleY(1.7321) translateY($hexMinusQuarter);
                    -webkit-transform-origin: 0 0;
                    -ms-transform-origin: 0 0;
                    transform-origin: 0 0;
                    background: inherit;
                }
            }
            .top {
              top: (-.353553 / $sA * 100vh);
              border-top: solid $hexBottomSize #333333;
              border-right: solid $hexBottomSize #333333;
            }
            .top:after {
              background-position: center top;
            }
            .bottom {
              bottom: $hexBottom;
              border-bottom: solid $hexBottomSize #333333;
              border-left: solid $hexBottomSize #333333;
            }        
            .bottom:after {
              background-position: center bottom;
            }
    }//mixin
$colorFillHex: transparent;
.hexagon {
    @include hexagonomicron(15);
    @include instaFlex;
}
#app{
    height:$appHeight;
    width:$appWidth;
    max-width: 329vh;
    display:flex;
    flex-wrap:wrap;
    justify-content: space-evenly;
}


.shelf{
    width:$shelfWidth;
    display:flex;
    flex-wrap:wrap;
    justify-content: space-evenly;
}

#ladder{
    width:$appWidth;
    height:5vh;
    margin: 1vh;
    display:flex;
    flex-wrap:wrap;
}
.ladderBlock{
    border:.5vh solid black;
    border-right:none;
    width:calc((100% / 17.23 ) - 1vw);//calc($appWidth / 22);
    height:100%;//calc((100% / 18.2 ) - 1vh);
    @include instaFlex;
}
.block1{
    border-radius: 50% 0 0 50%;
}
.block11{
    border-right: .5vh solid black;
}
.block22{
    border-right:.5vh solid black;
    border-radius: 0 50% 50% 0;
}
#gameScreen{
    height:100vh;
    width:100vw;
    @include instaFlex;
    padding:0;
}
body{
    display:flex;
}






#board{
    display:flex;
    align-items: center;
    flex-direction:column;
}







.elevator{z-index:3}


.shelf:nth-child(odd){
    margin-right: $marginLeft;
    color:white;
}
.shelf:nth-child(even){
    margin-left: $marginLeft;
    color:white;
}
@mixin arrow($color,$direction,$size){
    @if $direction == top {
        width: 0; 
        height: 0; 
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;

    }@else if $direction == left {

        width: 0; 
        height: 0; 
        border-top: $size solid transparent;
        border-bottom: $size solid transparent; 
        border-right:$size solid $color;

    }@else if $direction == bottom {

        width: 0; 
        height: 0; 
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;

    } @else if $direction == right {

        width: 0; 
        height: 0; 
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
    }
}
.miniGameCard{
    width:10vw;
    height:100vh;
    background-color:darkslategrey;
    @include instaFlex;
    .list{
        @include instaFlex;
        flex-wrap:wrap;
        width:9vw;
        height: 93%;
        margin:0;
        margin-left:-4vh;
        padding:0;
    }
}
.smallCard{
    @include hexagonomicron(13);
}
.smallCard:nth-child(odd){
    margin-left: 1.5vw;
}
.smallCard:nth-child(even){
    margin-left:-1.39vw;
}
.puller{
    background-color:darkslategrey;
    @include instaFlex;
    width:7vh;
    height:7vh;
    position:relative;
}
.pullerCircle{
    width:5vh;
    height: 5vh;
    border-radius:50%;
    @include instaFlex;
    background-color: darkturquoise;
}
.pullerTriangle.left{
    @include arrow(goldenrod,right,2.2vh);
    margin-left:1vh
}
.pullerTriangle.right{
    @include arrow(goldenrod,left,2.2vh);
    margin-left:-1vh;
}
.puller.right{
    border-radius: 50% 0 0 50%;
    top:-43vh;
    left:-11vh;
}
.puller.left{
    border-radius: 0 50% 50% 0;
    top:-36vh;
    right:-80%;
}
.roster_abil_desc.left{
    padding-right:29%!important;
}
$sizes:1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,30;
@for $i from 1 through 18 {
    .hexagrama-#{$i}{
        @include hexagonomicron($i)
    }
}
.list.left.tray, .list.right.tray{
    .smallCard{margin:0}
    margin: auto auto !important;
    width:90%;
    max-width:90%;
}
.unitModel{
    transform:scale(30%);
    z-index:2;
    margin:auto -47%!important;

}
.champModel{
    position:relative;
    top: -10%;
    left: -17%;
    z-index:2;
}