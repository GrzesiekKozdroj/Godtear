@keyframes objectiveGlow {
    $W:.4vw;
    $H:.3vw;
    0%{
        box-shadow: 0 0 $W $H #b3b32a;
    }
    15%{
        box-shadow: 0 0 $W $H #2ab34f;
    }
    30%{
        box-shadow: 0 0 $W $H #2ab39b;
    }
    45%{
        box-shadow: 0 0 $W $H #2a8cb3;
    }
    60%{
        box-shadow: 0 0 $W $H #792ab3;
    }
    75%{
        box-shadow: 0 0 $W $H #2a5ab3;
    }
    90%{
        box-shadow: 0 0 $W $H #b1b32a;
    }
    100%{
        box-shadow: 0 0 $W $H white;
    }
}
.obj1 {background-image:url("../img/1Obj.svg")}
.obj2 {background-image:url("../img/2Obj.svg")}
.obj3 {background-image:url("../img/3Obj.svg")}

.objectiveGlow{
    animation: 30s infinite alternate objectiveGlow;
}

@mixin makeGlow ($name, $color1, $color2, $color3, $color4){
    $w:1vh;
    $h:1vh;
    @keyframes glow#{$name} {
        0%{
            box-shadow: 0 0 $w $h $color1, 0 0 $w $h inset $color1;
        }
        33%{
            box-shadow: 0 0 $w $h $color2, 0 0 $w $h inset $color2;
        }
        66%{
            box-shadow: 0 0 $w $h $color3, 0 0 $w $h inset $color3;
        }
        100%{
            box-shadow: 0 0 $w $h $color4, 0 0 $w $h inset $color4;
        }
    };
    animation: 30s infinite alternate glow#{$name};
}

.redGlow{
    @include makeGlow('red',
     rgba(255, 0, 0, 0.562), 
     rgba(175, 0, 0, 0.575), 
     rgba(187, 0, 93, 0.623), 
     rgba(201, 44, 109, 0.555)
     )
}
.blueGlow{
    @include makeGlow('blue', 
    rgba(0, 38, 255, 0.534), 
    rgba(0, 175, 152, 0.582), 
    rgba(0, 187, 156, 0.575), 
    rgba(110, 78, 196, 0.514)
    )
}
.yellowGlow{
    @include makeGlow('yellow', 
    rgba(230, 255, 10, 0.2), 
    rgba(236, 240, 0, 0.2), 
    rgba(252, 239, 119, 0.2), 
    rgba(255, 251, 42, 0.2)
    )
}
.greenGlow{
    @include makeGlow('green', 
    rgba(81, 255, 0, 0.548), 
    rgba(0, 240, 12, 0.555), 
    rgba(85, 155, 67, 0.568), 
    rgba(74, 187, 8, 0.521)
    )
}
.legendaryGlow{
    @include makeGlow('goldenrod', rgba(218, 165, 32, 0.555), rgba(218, 165, 32, 0.568), rgba(218, 165, 32, 0.568), rgba(218, 165, 32, 0.562))
}
.claimColor{
    @include makeGlow('white', rgba(245, 245, 245, 0.589), rgba(194, 197, 194, 0.541), rgba(243, 243, 243, 0.568), rgba(238, 250, 231, 0.541))
}

@keyframes popbigAndSmall{
    10%{transform:scale(.7)}
    26%{transform:scale(1.3)}
    48%{transform:scale(.9)}
    76%{transform:scale(1.2)}
    100%{transform: scale(1)}
}
$selectedAllyGlow:rgba(8, 112, 184, 1);
$selectedByEnemyGlow:rgba(238, 65, 53, 1);
.selected-model{
    box-shadow: 0 0 3vh $selectedAllyGlow,0 0 1vh $selectedAllyGlow,0 0 2.5vh $selectedAllyGlow, 0 0 2vh $selectedAllyGlow;
    z-index:10;
    animation: forwards 2s popbigAndSmall;
}
.selected-enemy-model{
    box-shadow: 0 0 3vh $selectedByEnemyGlow,0 0 1vh $selectedByEnemyGlow,0 0 2.5vh $selectedByEnemyGlow, 0 0 2vh $selectedByEnemyGlow;
    z-index:10;
    animation: forwards 2s popbigAndSmall;
}
@keyframes coinPulse {
    25%{transform:scale(1.1)}
    75%{transform: scale(.8);}
}
#coin{
    width:1px;
    height: 1px;
    margin:auto auto;
    border-radius: 50%;
    background-color: goldenrod;
    box-shadow: 0 0 1vh 2vh rgba(218, 165, 32, 1);
    position:relative;
    animation: alternate infinite 4s coinPulse;
}
$glowDensity:.25;

[data-glow="redGlow"]{
    @include makeGlow('red', 
        rgba(255, 0, 0, $glowDensity), 
        rgba(175, 0, 0, $glowDensity), 
        rgba(187, 0, 93, $glowDensity), 
        rgba(201, 44, 109, $glowDensity)
    )
}
[data-glow="blueGlow"]{
    @include makeGlow('blue', 
        rgba(0, 38, 255, $glowDensity), 
        rgba(0, 175, 152, $glowDensity),
        rgba(0, 187, 156, $glowDensity), 
        rgba(110, 78, 196, $glowDensity)
    )
}
[data-glow="yellowGlow"]{
    @include makeGlow('yellow', 
        rgba(238, 255, 0,.25), 
        rgba(236, 240, 0,.25), 
        rgba(252, 238, 119,.25), 
        rgba(255, 251, 42,.25)
    )
}
[data-glow="greenGlow"]{
    @include makeGlow('green', 
        rgba(81, 255, 0, $glowDensity), 
        rgba(0, 240, 12, $glowDensity), 
        rgba(84, 155, 67, $glowDensity), 
        rgba(73, 187, 8, $glowDensity)
    )
}
[data-glow="legendaryGlow"],[data-glow="shootAndScoot"],[data-glow="landSlideGlow"]{
    @include makeGlow('goldenrod', 
        rgba(218, 165, 32, $glowDensity), 
        rgba(218, 165, 32, $glowDensity), 
        rgba(218, 165, 32, $glowDensity), 
        rgba(218, 165, 32, $glowDensity)
    )
}
[data-glow="recruitGlow"],[data-glow="claimColor"],[data-glow^="newSpew"],[data-glow="graspingDead"],[data-glow="answerTheCall"],[data-glow="inductGlow"],[data-glow="sneak"],[data-glow="callTotems"],[data-glow^="rockFormation"]{
    @include makeGlow('white', 
        rgba(245, 245, 245, $glowDensity), 
        rgba(194, 197, 194, $glowDensity), 
        rgba(243, 243, 243, $glowDensity), 
        rgba(238, 250, 231, $glowDensity)
    )
}
[data-glow="straitPaths"], [data-glow="straitPaths1"], [data-glow="straitPaths2"], [data-glow="straitPaths3"], [data-glow="straitPaths4"], [data-glow="straitPaths5"], [data-glow="straitPaths6"]{
    @include makeGlow('white', 
        rgba(239, 255, 95, $glowDensity), 
        rgba(166, 255, 166, $glowDensity), 
        rgba(255, 252, 45, $glowDensity), 
        rgba(152, 241, 101, $glowDensity)
    )
}
[data-glow="deathMove"],.usedSkill{ 
    @include makeGlow('black',
        rgba(29, 28, 28, $glowDensity) ,
        rgba(36, 32, 32, $glowDensity) ,
        rgba(49, 6, 6, $glowDensity) ,
        rgba(41, 39, 39, $glowDensity) 
    )
}
@keyframes shake {
    0% { transform: translate(1px, 1px) rotate(0deg); }
    10% { transform: translate(-1px, -2px) rotate(-1deg); }
    20% { transform: translate(-3px, 0px) rotate(1deg); }
    30% { transform: translate(3px, 2px) rotate(0deg); }
    40% { transform: translate(1px, -1px) rotate(1deg); }
    50% { transform: translate(-1px, 2px) rotate(-1deg); }
    60% { transform: translate(-3px, 1px) rotate(0deg); }
    70% { transform: translate(3px, 1px) rotate(-1deg); }
    80% { transform: translate(-1px, -1px) rotate(1deg); }
    90% { transform: translate(1px, 2px) rotate(0deg); }
    100% { transform: translate(1px, -2px) rotate(-1deg); }
  }

  .shakeModel.champModel{
    animation: shake 0.5s;
    animation-iteration-count: infinite;
  }
  @keyframes deathGrip {
    0%{
      filter:grayscale(0)
    }
      100%{
        filter:grayscale(.77)
      }
  }
  .death{
      animation: forwards 1s deathGrip;
  }

  .resurrecting{
      animation: reverse 1s deathGrip;
  }
  .illKillYouAll, .outflank, .marchGuardBlack, .marchGuardWhite, .tsunami-moveable, .tsunami-selected, .earthquake_moveable{
    filter: invert(18%) saturate(141);
  }
  .mournblade_raisins{
    filter: drop-shadow(0 0 2vh rgb(72, 255, 0)) grayscale(53%)!important;
  }


  //---------------------FIRE---------------------------
$dur: 1s;
$blur: 0.02em;
$fireRad: 3em;
$parts: 50;
$partSize: 5em;
#multi_choice_info_panel{
    position: absolute;
    z-index: 4;
    width: 0;
    height: 0;
    bottom: 24vh;
    left: 42vw;
    transform: scale(.55,.3);
}
.fire {
    //pointer-events: none;
	font-size: 24px;
	filter: blur($blur);
	-webkit-filter: blur($blur);
	margin: 3em auto 0 auto;
	position: relative;
	width: 10em;
    height: 12em;
    transform-origin:bottom;
}
.particle {
	animation: rise $dur ease-in infinite;
	border-radius: 50%;
	mix-blend-mode: screen;
	opacity: 0;
	position: absolute;
	bottom: 0;
	width: $partSize;
	height: $partSize;
	// spread particles out in time and x-position to get desired effect
	@for $p from 1 through $parts {
		&:nth-of-type(#{$p}) {
			animation-delay: $dur * random();
			left: calc((100% - #{$partSize}) * #{($p - 1)/$parts});
		}
	}
}
.blueFlame{background-image: radial-gradient(rgba(77, 247, 219, 0.363) 20%, rgba(3, 33, 117, 0.274) 70%);}
.yellowFlame{background-image: radial-gradient(rgba(247, 216, 77, 0.363) 20%, rgba(117, 106, 3, 0.274) 70%);}
.greenFlame{background-image: radial-gradient(rgba(125, 247, 77, 0.363) 20%, rgba(3, 117, 13, 0.274) 70%);}
.redFlame{background-image: radial-gradient(rgba(247, 77, 77, 0.363) 20%, rgba(117, 20, 3, 0.274) 70%);}
@keyframes rise {
	from {
		opacity: 0;
		transform: translateY(0) scale(1);
	}
	25% {
		opacity: 1;
	}
	to {
		opacity: 0;
		transform: translateY(-10em) scale(0);
	}
}
.multi_choice{
    pointer-events: all;
    width: 20vw;
    text-align: center;
    margin: auto auto;
    position: relative;
    z-index: 6;
    height: 6vh;
    font-family: Shojumaru;
    color: white;
    text-shadow: 0 0 1vh black, 0 0 .5vh black, 0 0 .75vh black, 0 0 1.25vh black, 0 0 .25vh black;
    font-size: 166%;
    left:10vh;
}
.multi_choice.abil_name{
    top:37vh;
}
.multi_choice.abil_count{
    top:54vh;
    font-size:151%;
}
.destined_for_DOOM,.shadowStepWhite{
    img{
        filter: invert(90%) saturate(8);
    }
}
.avalanche_moveable {
    transform: scale(1.4);
    filter: contrast(1.25) brightness(1.5) saturate(1.5);
}
@mixin gameCard_BB_glow ($c1,$c2,$c3,$c4,$c5,$c6,$c7,$c8,$c9){
    background: linear-gradient(45deg, $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9);
}

.glow_unused {
    z-index: 0;
}

.glow_unused:before {
    content: '';
    @include gameCard_BB_glow (rgb(255, 115, 0),
                               rgb(255, 238, 0), 
                               rgb(187, 255, 0), 
                               rgb(255, 238, 0), 
                               rgb(217, 255, 0), 
                               rgb(255, 153, 0), 
                               rgb(229, 255, 0), 
                               rgb(255, 208, 0), 
                               rgb(255, 187, 0)
                               );
    position: absolute;
    background-size: 400%;
    z-index: -1;
    animation: glowing 20s linear infinite;
    transition: opacity .3s ease-in-out;
    filter: blur(5px);
    width: calc(100% + 4px);
    height: calc(161% + 4px);
    border-radius: 10%;
    top:-41%;
}

.glow_unused {
    color: #000
}

.glow_unused:before {
    opacity: 1;
}

.glow_unused:after {
    z-index: 0;
    content: '';
}

@keyframes glowing {
    0% { background-position: 0 0; }
    50% { background-position: 400% 0; }
    100% { background-position: 0 0; }
}
@keyframes glowingbig {
    0% { background-position: 0 0; }
    50% { background-position: 700% 0; }
    100% { background-position: 0 0; }
}
#smallCardParagraph.skilling_declaration{//looks bad
    width: 120%;
    height: 187%;
    top: -42%;
    border-radius: 50%;
    background-image: radial-gradient(circle at center, rgba(170, 253, 230, 0.75) 0%, rgba(40, 223, 206, 0.31) 50%, rgba(39, 176, 157, 0) 100%);
    left: -12%;
    box-shadow: 0 0 2vw;
}


.glow_BB_card {
    z-index: 0;
}
@mixin b_b {
    content: '';
    position: absolute;
    background-size: 400%;
    z-index: -1;
    filter: blur(5px);
    width: calc(120% + 4px);
    height: calc(190% + 4px);
    border-radius: 50%;
    top:-54%;
    left:-20%;
    animation: glowingbig 20s linear infinite;
    transition: opacity .3s ease-in-out;
}
.glow_BB_card.booned:before{
    @include gameCard_BB_glow (rgb(0, 183, 255),
                               rgb(119, 0, 255), 
                               rgb(0, 255, 191), 
                               rgb(145, 255, 0), 
                               rgb(0, 255, 242), 
                               rgb(0, 174, 255), 
                               rgb(0, 47, 255), 
                               rgb(0, 255, 13), 
                               rgb(0, 255, 76)
                               );
    @include b_b;
}
.glow_BB_card.blighted:before{
    @include gameCard_BB_glow (rgb(255, 115, 0),
                               rgb(67, 2, 87), 
                               rgb(17, 94, 2), 
                               rgb(94, 3, 3), 
                               rgb(217, 255, 0), 
                               rgb(255, 94, 0), 
                               rgb(255, 0, 0), 
                               rgb(140, 0, 255), 
                               rgb(136, 23, 61)
                               );
    @include b_b;
}


.glow_BB_card {
    color: #000
}

.glow_BB_card:before {
    opacity: 1;
}

.glow_BB_card:after {
    z-index: 0;
    content: '';
}
.activated{
    filter:grayscale(.9) opacity(.8);
}

@mixin barwyZespolu ($a,$b,$c,$d,$e,$f,$g,$h,$i){
    color: #000;
    &:before{
        content: '';
        @include gameCard_BB_glow ($a,$b,$c,$d,$e,$f,$g,$h,$i);
        position: absolute;
        background-size: 400%;
        animation: glowing 15s linear infinite;
        transition: opacity .3s ease-in-out;
        filter: blur(5px);
        width: calc(100% + 4px);
        height: calc(161% + 4px);
        border-radius: 15%;
        top:-41%;
        opacity: 1;
    }
    &:after{
        content: '';
    }
}


.whiteTeam,.whiteTem{
    @include barwyZespolu(
        rgb(139, 251, 255),
        rgb(130, 255, 238), 
        rgb(149, 204, 255), 
        rgb(131, 154, 255), 
        rgb(155, 243, 255), 
        rgb(188, 242, 255), 
        rgb(118, 255, 248), 
        rgb(148, 212, 255), 
        rgb(133, 141, 255)
    )
}
.blackTeam,.blackTem{
    @include barwyZespolu(
        rgb(194, 69, 6),
        rgb(209, 29, 16), 
        rgb(182, 8, 75), 
        rgb(218, 37, 91), 
        rgb(194, 14, 125), 
        rgb(206, 43, 18), 
        rgb(224, 91, 8), 
        rgb(189, 5, 176), 
        rgb(190, 10, 142)
    )
}
@mixin click($g){
    transform:scale($g)
}
.smallCard:active,#claimAction:active{@include click(.9);}
.hexagon:active{@include click(.9);}
.hexEaters.blighted.boon-blight{opacity:1;}
.current,.roll{
    filter: saturate(4);
}
.current_selected,.marchjet_selected,.roll_selected,.summonsWalk{
    filter:saturate(8);
}
.SneakyStaber_whileSneaking { margin-left: -105%!important; }//NOT ACTIVE NEEDS A IF STATEMENT THAT CHECK IF ITS ON HX WITH CHAMP OF SORTS